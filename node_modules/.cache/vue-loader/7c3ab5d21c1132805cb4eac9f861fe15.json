{"remainingRequest":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\src\\views\\home.vue?vue&type=template&id=7eb2bc79&","dependencies":[{"path":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\src\\views\\home.vue","mtime":1607099635898},{"path":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}