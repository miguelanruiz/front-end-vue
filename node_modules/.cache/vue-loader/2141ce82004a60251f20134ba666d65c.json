{"remainingRequest":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\vue-google-heatmap\\src\\VueGoogleHeatmap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\vue-google-heatmap\\src\\VueGoogleHeatmap.vue","mtime":1521245891000},{"path":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\home-desktop\\Desktop\\NODE\\vueapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBsb2FkZWQgfSBmcm9tICcuL2xvYWRlcic7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ3Z1ZS1nb29nbGUtaGVhdG1hcCcsDQogIHByb3BzOiB7DQogICAgbGF0OiB7DQogICAgICB0eXBlOiBOdW1iZXIsDQogICAgICBkZWZhdWx0OiAoKSA9PiAzNy43NzUNCiAgICB9LA0KICAgIGxuZzogew0KICAgICAgdHlwZTogTnVtYmVyLA0KICAgICAgZGVmYXVsdDogKCkgPT4gLTEyMi40MzQNCiAgICB9LA0KICAgIGluaXRpYWxab29tOiB7DQogICAgICB0eXBlOiBOdW1iZXIsDQogICAgICBkZWZhdWx0OiAoKSA9PiAxMw0KICAgIH0sDQogICAgbWFwVHlwZTogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogKCkgPT4gJ3JvYWRtYXAnDQogICAgfSwNCiAgICBwb2ludHM6IHsNCiAgICAgIHR5cGU6IEFycmF5LA0KICAgICAgcmVxdWlyZWQ6IHRydWUNCiAgICB9LA0KICAgIHdpZHRoOiB7DQogICAgICB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLA0KICAgICAgZGVmYXVsdDogKCkgPT4gJzEwMCUnDQogICAgfSwNCiAgICBoZWlnaHQ6IHsNCiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sDQogICAgICBkZWZhdWx0OiAoKSA9PiAnMTAwJScNCiAgICB9DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgbWFwV2lkdGgoKSB7DQogICAgICBpZiAodHlwZW9mIHRoaXMud2lkdGggPT09ICdzdHJpbmcnKSB7DQogICAgICAgIHJldHVybiB0aGlzLndpZHRoOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIGAke3RoaXMud2lkdGh9cHhgOw0KICAgICAgfQ0KICAgIH0sDQogICAgbWFwSGVpZ2h0KCkgew0KICAgICAgaWYgKHR5cGVvZiB0aGlzLmhlaWdodCA9PT0gJ3N0cmluZycpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuaGVpZ2h0Ow0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIGAke3RoaXMuaGVpZ2h0fXB4YDsNCiAgICAgIH0NCiAgICB9LA0KICAgIGhlYXRtYXBQb2ludHMoKSB7DQogICAgICByZXR1cm4gdGhpcy5wb2ludHMubWFwKA0KICAgICAgICBwb2ludCA9PiBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKHBvaW50LmxhdCwgcG9pbnQubG5nKQ0KICAgICAgKTsNCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgcmV0dXJuIGxvYWRlZC50aGVuKCgpID0+IHsNCiAgICAgIGNvbnN0IG1hcEVsZW1lbnQgPSB0aGlzLiRyZWZzLm1hcDsNCg0KICAgICAgdGhpcy4kbWFwT2JqZWN0ID0gbmV3IGdvb2dsZS5tYXBzLk1hcChtYXBFbGVtZW50LCB7DQogICAgICAgIHpvb206IHRoaXMuaW5pdGlhbFpvb20sDQogICAgICAgIGNlbnRlcjogeyBsYXQ6IHRoaXMubGF0LCBsbmc6IHRoaXMubG5nIH0sDQogICAgICAgIG1hcFR5cGVJZDogdGhpcy5tYXBUeXBlDQogICAgICB9KTsNCg0KICAgICAgdGhpcy4kaGVhdG1hcCA9IG5ldyBnb29nbGUubWFwcy52aXN1YWxpemF0aW9uLkhlYXRtYXBMYXllcih7DQogICAgICAgIGRhdGE6IHRoaXMuaGVhdG1hcFBvaW50cywNCiAgICAgICAgbWFwOiB0aGlzLiRtYXBPYmplY3QNCiAgICAgIH0pOw0KDQogICAgICB0aGlzLiRoZWF0bWFwLnNldE1hcCh0aGlzLiRtYXBPYmplY3QpOw0KICAgIH0pOw0KICB9DQp9Ow0K"},{"version":3,"sources":["VueGoogleHeatmap.vue"],"names":[],"mappings":";;;;;;AAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"VueGoogleHeatmap.vue","sourceRoot":"node_modules/vue-google-heatmap/src","sourcesContent":["<template>\r\n  <div ref=\"map\"\r\n       :style=\"`width: ${mapWidth}; height: ${mapHeight}`\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { loaded } from './loader';\r\n\r\nexport default {\r\n  name: 'vue-google-heatmap',\r\n  props: {\r\n    lat: {\r\n      type: Number,\r\n      default: () => 37.775\r\n    },\r\n    lng: {\r\n      type: Number,\r\n      default: () => -122.434\r\n    },\r\n    initialZoom: {\r\n      type: Number,\r\n      default: () => 13\r\n    },\r\n    mapType: {\r\n      type: String,\r\n      default: () => 'roadmap'\r\n    },\r\n    points: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    width: {\r\n      type: [String, Number],\r\n      default: () => '100%'\r\n    },\r\n    height: {\r\n      type: [String, Number],\r\n      default: () => '100%'\r\n    }\r\n  },\r\n  computed: {\r\n    mapWidth() {\r\n      if (typeof this.width === 'string') {\r\n        return this.width;\r\n      } else {\r\n        return `${this.width}px`;\r\n      }\r\n    },\r\n    mapHeight() {\r\n      if (typeof this.height === 'string') {\r\n        return this.height;\r\n      } else {\r\n        return `${this.height}px`;\r\n      }\r\n    },\r\n    heatmapPoints() {\r\n      return this.points.map(\r\n        point => new google.maps.LatLng(point.lat, point.lng)\r\n      );\r\n    }\r\n  },\r\n  created() {\r\n    return loaded.then(() => {\r\n      const mapElement = this.$refs.map;\r\n\r\n      this.$mapObject = new google.maps.Map(mapElement, {\r\n        zoom: this.initialZoom,\r\n        center: { lat: this.lat, lng: this.lng },\r\n        mapTypeId: this.mapType\r\n      });\r\n\r\n      this.$heatmap = new google.maps.visualization.HeatmapLayer({\r\n        data: this.heatmapPoints,\r\n        map: this.$mapObject\r\n      });\r\n\r\n      this.$heatmap.setMap(this.$mapObject);\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n\r\n"]}]}